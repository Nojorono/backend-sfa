// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PermissionType {
  View
  Create
  Update
  Delete
  Manage
}

model Users {
  id          Int       @id @default(autoincrement())
  email       String    @unique
  username    String?   @unique
  employee_id String?   @unique
  user_uuid   String?   @unique
  password    String?
  picture     String?
  phone       String?
  join_date   DateTime?
  is_active   Boolean   @default(true)
  valid_from  DateTime  @default(now())
  valid_to    DateTime?
  role        Roles     @relation(fields: [role_id], references: [id])
  role_id     Int
  created_at  DateTime  @default(now())
  created_by  String?
  updated_at  DateTime  @updatedAt
  updated_by  String?
  deleted_at  DateTime?
  last_login  DateTime?

  @@map("users")
}

model Roles {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  description String?
  permissions Permissions[]
  users       Users[]
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt

  @@map("roles")
}

model Permissions {
  id              Int            @id @default(autoincrement())
  role            Roles          @relation(fields: [role_id], references: [id])
  role_id         Int
  menu            Menus          @relation(fields: [menu_id], references: [id])
  menu_id         Int
  permission_type PermissionType
  created_at      DateTime       @default(now())
  updated_at      DateTime       @updatedAt

  @@map("permissions")
}

model Menus {
  id         Int      @id @default(autoincrement())
  name       String
  path       String   @unique
  icon       String?
  parent_id  Int?
  order      Int      @default(0)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  parent      Menus?        @relation("MenuHierarchy", fields: [parent_id], references: [id])
  children    Menus[]       @relation("MenuHierarchy")
  permissions Permissions[]

  @@map("menus")
}

model Customers {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(255)
  alias      String?   @db.VarChar(255)
  category   String?   @db.VarChar(100)
  owner      String?   @db.VarChar(255)
  phone      String?   @db.VarChar(50)
  npwp       String?   @db.VarChar(50)
  ktp        String?   @db.VarChar(50)
  route_id   Int?      @db.Integer
  is_active  Boolean   @default(true)
  created_by String    @db.VarChar(50)
  created_at DateTime  @default(now())
  updated_by String    @db.VarChar(50)
  updated_at DateTime  @updatedAt
  deleted_at DateTime?

  @@map("customers")
}

model Parameters {
  id         Int       @id @default(autoincrement())
  key        String    @db.VarChar(100)
  value      String    @db.VarChar(255)
  label      String    @db.VarChar(255)
  is_active  Boolean   @default(true)
  created_by String    @db.VarChar(50)
  created_at DateTime  @default(now())
  updated_by String    @db.VarChar(50)
  updated_at DateTime  @updatedAt
  deleted_at DateTime?

  @@map("parameters")
}

model Branch {
  id                BigInt    @id @default(autoincrement())
  organization_code String    @db.VarChar(3)
  organization_name String    @db.VarChar(250)
  organization_id   Int
  org_name          String    @db.VarChar(250)
  org_id            String    @db.VarChar(150)
  organization_type String    @db.VarChar(150)
  region_code       String    @db.VarChar(150)
  address           String    @db.Text
  location_id       Int
  valid_from        DateTime  @db.Date
  valid_to          DateTime  @db.Date
  is_active         Boolean   @default(true)
  created_by        String    @db.VarChar(25)
  created_at        DateTime  @default(now())
  updated_by        String    @db.VarChar(25)
  updated_at        DateTime  @updatedAt
  deleted_at        DateTime?

  @@map("branch")
}
